/*
 * This file is generated by jOOQ.
 */
package jp.co.sysystem.springWorkout.domain.jooqObject.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import jp.co.sysystem.springWorkout.domain.jooqObject.Indexes;
import jp.co.sysystem.springWorkout.domain.jooqObject.Keys;
import jp.co.sysystem.springWorkout.domain.jooqObject.Workout;
import jp.co.sysystem.springWorkout.domain.jooqObject.tables.records.UserdetailRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.DateAsTimestampBinding;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userdetail extends TableImpl<UserdetailRecord> {

    private static final long serialVersionUID = 1258994565;

    /**
     * The reference instance of <code>workout.userdetail</code>
     */
    public static final Userdetail USERDETAIL = new Userdetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserdetailRecord> getRecordType() {
        return UserdetailRecord.class;
    }

    /**
     * The column <code>workout.userdetail.NO</code>.
     */
    public final TableField<UserdetailRecord, Integer> NO = createField(DSL.name("NO"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>workout.userdetail.ID</code>.
     */
    public final TableField<UserdetailRecord, String> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>workout.userdetail.BIRTH</code>.
     */
    public final TableField<UserdetailRecord, Timestamp> BIRTH = createField(DSL.name("BIRTH"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateAsTimestampBinding());

    /**
     * The column <code>workout.userdetail.CLUB</code>.
     */
    public final TableField<UserdetailRecord, String> CLUB = createField(DSL.name("CLUB"), org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * Create a <code>workout.userdetail</code> table reference
     */
    public Userdetail() {
        this(DSL.name("userdetail"), null);
    }

    /**
     * Create an aliased <code>workout.userdetail</code> table reference
     */
    public Userdetail(String alias) {
        this(DSL.name(alias), USERDETAIL);
    }

    /**
     * Create an aliased <code>workout.userdetail</code> table reference
     */
    public Userdetail(Name alias) {
        this(alias, USERDETAIL);
    }

    private Userdetail(Name alias, Table<UserdetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userdetail(Name alias, Table<UserdetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Userdetail(Table<O> child, ForeignKey<O, UserdetailRecord> key) {
        super(child, key, USERDETAIL);
    }

    @Override
    public Schema getSchema() {
        return Workout.WORKOUT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERDETAIL_PRIMARY);
    }

    @Override
    public UniqueKey<UserdetailRecord> getPrimaryKey() {
        return Keys.KEY_USERDETAIL_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserdetailRecord>> getKeys() {
        return Arrays.<UniqueKey<UserdetailRecord>>asList(Keys.KEY_USERDETAIL_PRIMARY);
    }

    @Override
    public Userdetail as(String alias) {
        return new Userdetail(DSL.name(alias), this);
    }

    @Override
    public Userdetail as(Name alias) {
        return new Userdetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userdetail rename(String name) {
        return new Userdetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userdetail rename(Name name) {
        return new Userdetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
